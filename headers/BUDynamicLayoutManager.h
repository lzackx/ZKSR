//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class BUTemplateModel, NSLock, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface BUDynamicLayoutManager : NSObject
{
    NSLock *_templateDataLock;
    NSMutableDictionary *_slotTemplateDataDictionary;
    NSMutableDictionary *_templateDataDictionary;
    BUTemplateModel *_onlineTemplateModel;
    BUTemplateModel *_templateModel;
    NSString *_templateDirectory;
    NSMutableDictionary *_loadingTemplateSuccessBlockDict;
    NSLock *_successBlockLock;
    NSLock *_templateResourceFileLock;
    NSObject<OS_dispatch_queue> *_ioSerialQueue;
    NSObject<OS_dispatch_queue> *_downloadConcurrentQueue;
    NSObject<OS_dispatch_queue> *_logSerialQueue;
}

+ (void)deleteAllLocalData;
+ (id)pbu_templateDataPersistence;
+ (id)pbu_templatePersistence;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)cacheExistTemplateDataWithSlotId:(id)arg1;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *downloadConcurrentQueue; // @synthesize downloadConcurrentQueue=_downloadConcurrentQueue;
- (void)fetchTemplateDataWithSlotId:(id)arg1 model:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)fetchTemplateWithDCChanged:(_Bool)arg1;
- (id)init;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *ioSerialQueue; // @synthesize ioSerialQueue=_ioSerialQueue;
@property(retain, nonatomic) NSMutableDictionary *loadingTemplateSuccessBlockDict; // @synthesize loadingTemplateSuccessBlockDict=_loadingTemplateSuccessBlockDict;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *logSerialQueue; // @synthesize logSerialQueue=_logSerialQueue;
- (id)mainTemplateModel;
@property(retain, nonatomic) BUTemplateModel *onlineTemplateModel; // @synthesize onlineTemplateModel=_onlineTemplateModel;
- (void)pbu_addWithURL:(id)arg1 successBlock:(CDUnknownBlockType)arg2;
- (_Bool)pbu_cacheExistWithFileName:(id)arg1;
- (void)pbu_checkTemplateDataCountWithLatestTemplateDataId:(id)arg1;
- (void)pbu_deleteUselessTemplateResourceFileWithLocalURLArray:(id)arg1;
- (void)pbu_downloadTemplateDataWithModel:(id)arg1 successBlock:(CDUnknownBlockType)arg2;
- (void)pbu_downloadTemplateResourceWithURL:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)pbu_downloadTemplateWithDCChanged:(_Bool)arg1 successBlock:(CDUnknownBlockType)arg2;
- (void)pbu_executeWithURL:(id)arg1;
- (id)pbu_fileNameWithUrl:(id)arg1;
- (_Bool)pbu_isDownloadWithURL:(id)arg1;
- (void)pbu_logWithSubType:(id)arg1 format:(id)arg2;
- (_Bool)pbu_needToDownloadWithNewVersion:(id)arg1 useOnlineInfo:(_Bool)arg2;
- (void)pbu_printWithTemplateDataArray:(id)arg1 prefix:(id)arg2;
- (void)pbu_readAllLocalData;
- (void)pbu_readTempDataFromDisk;
- (void)pbu_readTemplateFromDisk;
- (void)pbu_replaceTemplateDataWithSlotId:(id)arg1 templateDataModel:(id)arg2;
- (void)pbu_saveTemplate;
- (void)pbu_saveTemplateDataWithLatestTemplateDataId:(id)arg1;
- (void)pbu_saveWithTemplateModel:(id)arg1 templateUrl:(id)arg2;
- (void)pbu_templateRegisterPrefixWithTemplateModel:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *slotTemplateDataDictionary; // @synthesize slotTemplateDataDictionary=_slotTemplateDataDictionary;
@property(retain, nonatomic) NSLock *successBlockLock; // @synthesize successBlockLock=_successBlockLock;
@property(retain, nonatomic) NSMutableDictionary *templateDataDictionary; // @synthesize templateDataDictionary=_templateDataDictionary;
@property(retain, nonatomic) NSLock *templateDataLock; // @synthesize templateDataLock=_templateDataLock;
@property(copy, nonatomic) NSString *templateDirectory; // @synthesize templateDirectory=_templateDirectory;
@property(retain) BUTemplateModel *templateModel; // @synthesize templateModel=_templateModel;
@property(retain, nonatomic) NSLock *templateResourceFileLock; // @synthesize templateResourceFileLock=_templateResourceFileLock;
- (id)templateDataModelWithId:(id)arg1;
- (id)templateResourceLocalURLWithURL:(id)arg1;

@end

